
repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://raw.githubusercontent.com/brharrington/rrd4j/repo' }
}

apply plugin: 'java'
apply plugin: 'nebula-ospackage-daemon'

dependencies {
    compile 'com.netflix.atlas:atlas-standalone:1.4.2-SNAPSHOT'
    compile 'com.netflix.iep:iep-eureka:0.1.6'
    compile 'com.netflix.iep:iep-governator:0.1.6'
    compile 'com.netflix.karyon2:karyon-admin-web:2.2.00-ALPHA7'
    compile 'com.netflix.ribbon:ribbon-core:2.0-RC13'
    compile 'com.netflix.ribbon:ribbon-httpclient:2.0-RC13'
    compile 'com.netflix.ribbon:ribbon-loadbalancer:2.0-RC13'
    compile 'com.netflix.ribbon:ribbon-eureka:2.0-RC13'
    compile 'com.netflix.spectator:spectator-nflx-plugin:0.17'
    compile 'com.netflix.spectator:spectator-ext-log4j2:0.17'
    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.1'
    compile 'org.apache.logging.log4j:log4j-core:2.1'
    compile 'org.apache.logging.log4j:log4j-jul:2.1'
    compile 'org.apache.logging.log4j:log4j-jcl:2.1'
}

jar.doFirst {
    manifest {
        attributes(
            'Main-Class': 'com.netflix.atlas.standalone.Main',
            'Class-Path': configurations.runtime.collect { "libs/" + it.getName() }.join(' '))
    }
}

buildDeb.dependsOn = [jar]

ospackage {

    requires('daemontools-run')

    // Copy in files specific to a given webapp
    from('root') {
        into '/'
    }

    // Copy dependencies
    from(configurations['runtime']) {
        into '/var/lib/atlas/libs'
    }

    // Copy jar from this build
    from(jar.archivePath) {
        into '/var/lib/atlas'
        rename(jar.archiveName, "main.jar")
    }

    // Set java 8 as the primary
    String javaVM = System.getProperty("default.java", "java-8-oracle")
    postInstall("sudo update-java-alternatives --set $javaVM")
}

daemon {
    daemonName = "atlas"
    command = "/var/lib/atlas/start.sh"
}
